AWSTemplateFormatVersion: '2010-09-09'
Metadata: 
  License: Apache-2.0
Description: Optimizing on AWS IAM User Stack
Parameters:
  Password:
    NoEcho: 'true'
    Type: String
    Description: New account password
    MinLength: '1'
    MaxLength: '41'
    ConstraintDescription: the password must be between 1 and 41 characters
Resources:
  edXDeployingPolicy:
    Type: AWS::IAM::Policy
    Properties: 
      PolicyName: edXOptimizingPolicy
      Users:
        - !Ref edXOptimizingUser     
      PolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - 
            Effect: "Allow"
            Action: 
              - rds:*
              - ssm:*
              - kms:*
              - apigateway:*
              - lambda:*
              - sns:*
              - application-autoscaling:*
              - s3:*
              - logs:*
              - cloudformation:*
              - dynamodb:*
              - cloud9:*
              - elasticloadbalancing:*
              - autoscaling:*
              - iam:*
              - cloudfront:*
              - cloudwatch:*
              - ecs:*
              - ecr:*
              - pricing:*
              - ec2:*
              - config:*
              - elasticache:*
              - xray:*
            Resource: "*"

          
  edXOptimizingUser:
    Type: AWS::IAM::User
    Properties:
      LoginProfile:
        Password: !Ref 'Password'
        PasswordResetRequired: false
      UserName: edXOptimizingUser
      
  AccessKey:
    Type: AWS::IAM::AccessKey
    Properties:
      UserName: !Ref 'edXOptimizingUser'

  DenyBucketDeletionPolicy:
    Type: AWS::IAM::Policy
    Properties: 
      PolicyName: DenyBucketDeletionPolicy
      Users:
        - !Ref edXOptimizingUser     
      PolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - 
            Sid: ExplicitlyDenyBucketDeletion
            Effect: "Deny"
            Action: 
              - s3:DeleteBucket
            Resource: arn:aws:s3:::edx-*  
            
  AllowBucketDeletionPolicy:
    Type: AWS::IAM::Policy
    Properties: 
      PolicyName: AllowBucketDeletionPolicy
      PolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - 
            Sid: ExplicitlyAllowBucketDeletion
            Effect: "Allow"
            Action: 
              - s3:DeleteBucket
            Resource: arn:aws:s3:::edx-*  
      Roles:
        - !Ref AllowBucketDeletionRole

  AllowBucketDeletionRole: 
    Type: "AWS::IAM::Role"
    Properties: 
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - 
            Effect: "Allow"
            Principal: 
              AWS: 
                - !GetAtt edXOptimizingUser.Arn
            Action: 
              - "sts:AssumeRole"
      Path: "/"   
      
  DecryptPolicy:
    Type: AWS::IAM::Policy
    Properties: 
      PolicyName: DecryptPolicy
      PolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - 
            Sid: ExplicitlyAllowBucketDeletion
            Effect: "Allow"
            Action: 
              - kms:Decrypt
              - kms:DescribeKey
            Resource: "*"
      Roles:
        - !Ref LambdaDecryptRole
        
  LambdaDecryptRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: LambdaDecryptRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole   
      Path: "/"

  KeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: alias/edXExercise-key
      TargetKeyId:
        Ref: EdxKey
      
  EdxKey:
    Type: AWS::KMS::Key
    Properties: 
      Description: "Key for edX exercise"
      KeyPolicy: 
        Version: "2012-10-17"
        Id: "key-default-1"
        Statement: 
          - 
            Sid: "Allow administration of the key"
            Effect: "Allow"
            Principal: 
              AWS: 
                - !GetAtt edXOptimizingUser.Arn
            Action: 
              - "kms:Create*"
              - "kms:Describe*"
              - "kms:Enable*"
              - "kms:List*"
              - "kms:Put*"
              - "kms:Update*"
              - "kms:Revoke*"
              - "kms:Disable*"
              - "kms:Get*"
              - "kms:Delete*"
              - "kms:ScheduleKeyDeletion"
              - "kms:CancelKeyDeletion"
            Resource: "*"
          - 
            Sid: "Allow use of the key"
            Effect: "Allow"
            Principal: 
              AWS: 
                - !GetAtt edXOptimizingUser.Arn
                - !GetAtt LambdaDecryptRole.Arn
            Action: 
              - "kms:Encrypt"
              - "kms:Decrypt"
              - "kms:ReEncrypt*"
              - "kms:GenerateDataKey*"
              - "kms:DescribeKey"
            Resource: "*"

Outputs:
  EdXDeployingUser:
    Value: !GetAtt edXOptimizingUser.Arn
  AccessKey:
    Value: !Ref 'AccessKey'
    Description: AWSAccessKeyId of new user
  SecretKey:
    Value: !GetAtt [AccessKey, SecretAccessKey]
    Description: AWSSecretKey of new user
  AllowBucketDeletionRoleArn:
    Value: !GetAtt AllowBucketDeletionRole.Arn
  EdxKeyArn:
    Value: !GetAtt EdxKey.Arn
  LambdaDecryptRoleArn:
    Value: !GetAtt LambdaDecryptRole.Arn    